#!/usr/bin/env bash

set -e
set -o pipefail

[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

get_download_url () {
  local version="$ASDF_INSTALL_VERSION"
  local os=$(go env GOOS)
  local arch=$(go env GOARCH)
  echo "https://github.com/protocolbuffers/protobuf-go/releases/download/v${version}/protoc-gen-go.v${version}.${os}.${arch}.tar.gz"
}

install_protoc_gen_go () {
  local version="$1"
  local download_path="$2"
  local install_path="$3"
  created_tmp="0"
  download_url=""

  if [ -z "$download_path" ]; then
    download_path=$(mktemp -dt asdf-golang.XXXX)
    created_tmp="1"
  fi

  download_url="$(get_download_url)"

  # echo $download_url
  # echo $download_path
  # echo $install_path

  mkdir -p "$download_path"
  mkdir -p "$install_path/bin"

  # download
  curl -sSL $download_url -o "${download_path}/archive.tar.gz"
  tar -C "$install_path/bin" -zxf "${download_path}/archive.tar.gz"
  chmod +x "${install_path}/bin/protoc-gen-go"

  if [ "1" = "$created_tmp" ]; then
    echo "removing $download_path"
    rm -r "$download_path"
  fi
}

install_protoc_gen_go "$ASDF_INSTALL_VERSION" "${ASDF_DOWNLOAD_PATH:-}" "$ASDF_INSTALL_PATH"